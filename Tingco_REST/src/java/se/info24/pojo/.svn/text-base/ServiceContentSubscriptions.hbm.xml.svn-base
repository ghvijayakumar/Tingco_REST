<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- Generated Sep 4, 2012 12:18:32 PM by Hibernate Tools 3.2.1.GA -->
<hibernate-mapping>
  <class name="se.info24.pojo.ServiceContentSubscriptions" schema="dbo" table="ServiceContentSubscriptions">
    <cache usage="nonstrict-read-write"/>
    <id name="serviceContentSubscriptionId" type="string">
      <column length="36" name="ServiceContentSubscriptionID"/>
      <generator class="assigned"/>
    </id>
    <property name="serviceId" type="string">
      <column length="36" name="ServiceID" not-null="true"/>
    </property>
    <property name="contentCategoryId" type="string">
      <column length="36" name="ContentCategoryID" not-null="true"/>
    </property>
    <property name="agreementId" type="string">
      <column length="36" name="AgreementID"/>
    </property>
    <property name="serviceClientLoginId" type="string">
      <column length="36" name="ServiceClientLoginID"/>
    </property>
    <property name="subscriptionEnabled" type="java.lang.Integer">
      <column name="SubscriptionEnabled"/>
    </property>
    <property name="serviceSubscriptionAclid" type="string">
      <column length="36" name="ServiceSubscriptionACLID"/>
    </property>
    <property name="userId" type="string">
      <column length="36" name="UserID"/>
    </property>
    <property name="createdDate" type="timestamp">
      <column length="23" name="CreatedDate"/>
    </property>
    <property name="updatedDate" type="timestamp">
      <column length="23" name="UpdatedDate"/>
    </property>
  </class>
  <query name="getServiceContentSubscriptionsByLoginIDandACLID">
        from ServiceContentSubscriptions where serviceClientLoginId = :serviceClientLoginId and serviceSubscriptionAclid = :serviceSubscriptionAclid
    </query>
  <query name="getServiceContentSubscriptions">
        from ServiceContentSubscriptions where serviceClientLoginId in (:serviceClientLoginId) and serviceSubscriptionAclid in (:serviceSubscriptionAclid)
    </query>
  <query name="getServiceContentSubscriptionsBySCLID">
        from ServiceContentSubscriptions where serviceClientLoginId in (:serviceClientLoginId)
    </query>
  <query name="getServiceContentSubscriptionsByContentID">
        from ServiceContentSubscriptions where contentCategoryId in (:contentCategoryId) and serviceClientLoginId in (:serviceClientLoginId) and serviceSubscriptionAclid in (:serviceSubscriptionAclid)
    </query>
  <query name="getServiceContentSubscriptionsById">
        from ServiceContentSubscriptions where serviceContentSubscriptionId = :serviceContentSubscriptionId
    </query>
  <query name="getServiceContentSubscriptionsByVariousIds">
        from ServiceContentSubscriptions where serviceId = :serviceId and contentCategoryId = :contentCategoryId and serviceClientLoginId = :serviceClientLoginId
    </query>
  <query name="getServiceContentSubscriptionsByContentCategoryId">
        from ServiceContentSubscriptions where contentCategoryId = :contentCategoryId
    </query>
  <query name="getServiceContentSubscriptionsByVariousIdsForDetail">
        from ServiceContentSubscriptions where contentCategoryId in(:contentCategoryId) and serviceClientLoginId = :serviceClientLoginId
    </query>
</hibernate-mapping>
